on:
  - pull_request
  - push

name: ci-mssql

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    name: PHP ${{ matrix.php }}-mssql-${{ matrix.mssql.version }}

    env:
      EXTENSIONS: pdo, pdo_sqlsrv

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        php:
          - 8.2
          - 8.3
        mssql:
          - version: server:2022-latest
            mssql-tool: /opt/mssql-tools18/bin/sqlcmd -C

    services:
      mssql:
          image: mcr.microsoft.com/mssql/${{ matrix.mssql.version }}
          env:
              SA_PASSWORD: YourStrong!Passw0rd
              ACCEPT_EULA: Y
              MSSQL_PID: Developer
          ports:
              - 1433:1433
          options: --name=mssql --health-cmd="${{ matrix.mssql.mssql-tool }} -S localhost -U SA -P 'YourStrong!Passw0rd' -Q 'SELECT 1'" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create MS SQL Database
        run: docker exec -i mssql ${{ matrix.mssql.mssql-tool }} -S localhost -U SA -P 'YourStrong!Passw0rd' -Q 'CREATE DATABASE yiitest'

      - name: Install PHP with extensions
        uses: shivammathur/setup-php@v2
        with:
          extensions: ${{ env.EXTENSIONS }}
          ini-values: date.timezone='UTC'
          php-version: ${{ matrix.php }}
          tools: composer:v2, pecl

      - name: Install dependencies with composer
        run: composer update --prefer-dist --no-interaction --no-progress --optimize-autoloader --ansi

      - name: Run MSSQL tests with PHPUnit.
        run: vendor/bin/phpunit --group mssql --colors=always
